# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:
  - clone
  - graph
  - upload

variables:
  FIGSHARE_APP_ID: $figshare  # Variable definida previamente

before_script:
  - apt-get update -qy
  - apt-get install -y python3-pip

clone-job:
  stage: clone
  script:
    - echo "Cloning the repository..."
    - git clone https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.com/$CI_PROJECT_PATH.git
    - cd practica_gitlab

graph-job:
  stage: graph
  script:
    - echo "Installing dependencies..."
    - apt-get install -y python3-venv  # Instala el paquete para crear entornos virtuales
    - python3 -m venv venv  # Crea el entorno virtual
    - source venv/bin/activate || true  # Activa el entorno virtual (agregué || true para evitar errores si no se activa)
    - pip install pandas matplotlib  # Instala pandas y matplotlib
    - echo "Generating graphs..."
    - python3 grafico.py
    - echo "Graph generation complete."

upload-job:
  stage: upload
  script:
    - echo "Uploading graphs to Figshare..."
    - apt-get install -y python3-venv  # Instala el paquete para crear entornos virtuales
    - python3 -m venv venv  # Crea el entorno virtual
    - source venv/bin/activate || true  # Activa el entorno virtual (agregué || true para evitar errores si no se activa)
    - pip install figshare
    - pip install requests  # Agrega esta línea para instalar el módulo requests
    - python3 upload_to_figshare.py
    - echo "Graphs uploaded to Figshare successfully."